version: '3.8'

services:
  # Milvus向量数据库
  milvus:
    image: milvusdb/milvus:v2.3.4
    container_name: milvus-standalone
    ports:
      - "19530:19530"
      - "9091:9091"
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - milvus_data:/var/lib/milvus
    depends_on:
      - etcd
      - minio
    networks:
      - dify_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # etcd (Milvus依赖)
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: milvus-etcd
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - dify_network
    restart: unless-stopped

  # MinIO对象存储 (Milvus依赖)
  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: milvus-minio
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: minio server /data --console-address ":9001"
    networks:
      - dify_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # PDF解析API + Dify适配器
  pdf-knowledge-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pdf-knowledge-service
    ports:
      - "8000:8000"  # PDF解析API
      - "8001:8001"  # Dify适配器
    environment:
      # Milvus连接配置
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
      
      # 适配器配置
      - ADAPTER_HOST=0.0.0.0
      - ADAPTER_PORT=8001
      - PDF_PARSER_API_URL=http://localhost:8000
      
      # 日志配置
      - LOG_LEVEL=INFO
      
      # API Key配置
      - DEFAULT_API_KEY=dify-pdf-docs-001
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    depends_on:
      milvus:
        condition: service_healthy
    networks:
      - dify_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health", "&&", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

# 网络配置
networks:
  dify_network:
    driver: bridge
    name: dify_network

# 数据卷配置
volumes:
  milvus_data:
    name: milvus_data
  etcd_data:
    name: etcd_data
  minio_data:
    name: minio_data
  app_data:
    name: app_data
  app_logs:
    name: app_logs
