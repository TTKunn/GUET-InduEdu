version: '3.8'

services:
  # MongoDB数据库
  mongodb:
    image: mongo:7.0
    container_name: analysis_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: interview_analysis
    volumes:
      - mongodb_data:/data/db
    networks:
      - analysis_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB管理界面
  mongo-express:
    image: mongo-express:1.0.0
    container_name: analysis_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - analysis_network

  # 简历分析服务
  analysis-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: analysis_service
    restart: unless-stopped
    ports:
      - "8004:8004"
    environment:
      # 数据库配置
      MONGO_URI: mongodb://admin:password123@mongodb:27017/interview_analysis?authSource=admin
      MONGO_DB: interview_analysis
      MONGO_COLLECTION: candidate_profiles
      
      # LLM配置
      ZHIPUAI_API_KEY: ${ZHIPUAI_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DEFAULT_LLM_PROVIDER: zhipuai
      
      # PDF解析服务配置 - 修正路径
      DOCUMENT_PARSER_URL: http://host.docker.internal:8002
      
      # 服务配置
      API_HOST: 0.0.0.0
      API_PORT: 8004
      LOG_LEVEL: INFO
      
      # 安全配置
      CORS_ORIGINS: "*"
      ENABLE_AUTH: false
      
    depends_on:
      - mongodb
    networks:
      - analysis_network
    volumes:
      - ./logs:/app/logs
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  mongodb_data:
    driver: local

networks:
  analysis_network:
    driver: bridge
